syntax = "proto3";
package wasmrollapp.cron.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "wasmrollapp/cron/v1beta1/params.proto";
import "wasmrollapp/cron/v1beta1/cron.proto";

option go_package = "github.com/dymensionxyz/rollapp-wasm/x/cron/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/wasmrollapp/cron/v1beta1/params";
  }
  rpc QueryWhitelistedContracts(QueryWhitelistedContractsRequest) returns (QueryWhitelistedContractsResponse) {
    option (google.api.http).get = "/wasmrollapp/cron/v1beta1/whitelisted_contracts";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryWhitelistedContractsRequest{
  cosmos.base.query.v1beta1.PageRequest pagination = 1
  [(gogoproto.moretags) = "yaml:\"pagination\""];
}

message QueryWhitelistedContractsResponse {
  repeated WhitelistedContract whilisted_contracts = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2
  [(gogoproto.moretags) = "yaml:\"pagination\""];
}

